
======================================================= FAILURES ========================================================
_____________________________________________ test_rich_printer_empty_tree ______________________________________________

empty_tree = <src.tree_interval.core.interval_core.Tree object at 0x7fc448de0210>, console = <console width=121 None>

    def test_rich_printer_empty_tree(empty_tree, console):
        """Test printing an empty tree."""
        printer = RichTreePrinter()
    
        with console.capture() as capture:
            printer.print_tree(empty_tree)
    
        output = capture.get()
>       assert "Empty tree" in output
E       AssertionError: assert 'Empty tree' in ''

tests/test_rich_printer.py:42: AssertionError
------------------------------------------------- Captured stdout call --------------------------------------------------
Empty tree
_____________________________________________ test_rich_printer_basic_tree ______________________________________________

basic_tree = <src.tree_interval.core.interval_core.Tree object at 0x7fc448a61dd0>, console = <console width=121 None>

    def test_rich_printer_basic_tree(basic_tree, console):
        """Test printing a basic tree structure."""
        printer = RichTreePrinter()
    
        with console.capture() as capture:
            printer.print_tree(basic_tree)
    
        output = capture.get()
>       assert "[0-100]" in output
E       AssertionError: assert '[0-100]' in ''

tests/test_rich_printer.py:53: AssertionError
------------------------------------------------- Captured stdout call --------------------------------------------------
[0-100] size=100 info=Root
└── [10-50] size=40 info=Child
____________________________________________ test_rich_printer_custom_styles ____________________________________________

basic_tree = <src.tree_interval.core.interval_core.Tree object at 0x7fc448a65bd0>, console = <console width=121 None>

    def test_rich_printer_custom_styles(basic_tree, console):
        """Test printing with custom styles."""
        config = RichPrintConfig(root_style=Style(color="red", bold=True),
                                 node_style=Style(color="blue"),
                                 leaf_style=Style(color="green"))
        printer = RichTreePrinter(config)
    
        with console.capture() as capture:
            printer.print_tree(basic_tree)
    
        output = capture.get()
>       assert output.strip() != ""  # Verify some output is generated
E       AssertionError: assert '' != ''
E        +  where '' = <built-in method strip of str object at 0x7fc44a778880>()
E        +    where <built-in method strip of str object at 0x7fc44a778880> = ''.strip

tests/test_rich_printer.py:81: AssertionError
------------------------------------------------- Captured stdout call --------------------------------------------------
[0-100] size=100 info=Root
└── [10-50] size=40 info=Child
________________________________________________ test_position_creation _________________________________________________

    def test_position_creation():
        pos = Position(0, 100, "Test")
        assert pos.start == 0
        assert pos.end == 100
        assert pos.info == "Test"
>       assert pos.lineno is None
E       assert 1 is None
E        +  where 1 = <src.tree_interval.core.interval_core.Position object at 0x7fc448a6b190>.lineno

tests/test_tree_core.py:13: AssertionError
================================================ short test summary info ================================================
FAILED tests/test_rich_printer.py::test_rich_printer_empty_tree - AssertionError: assert 'Empty tree' in ''
FAILED tests/test_rich_printer.py::test_rich_printer_basic_tree - AssertionError: assert '[0-100]' in ''
FAILED tests/test_rich_printer.py::test_rich_printer_custom_styles - AssertionError: assert '' != ''
FAILED tests/test_tree_core.py::test_position_creation - assert 1 is None
============================================= 4 failed, 13 passed in 0.19s ==============================================
~/Tree$ 