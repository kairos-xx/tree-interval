============================= test session starts ==============================
platform linux -- Python 3.11.10, pytest-8.3.4, pluggy-1.5.0
rootdir: /home/runner/treeinterval
configfile: pyproject.toml
plugins: cov-6.0.0
collected 45 items

tests/test_ast_builder.py .FFF                                           [  8%]
tests/test_ast_nodes.py ......                                           [ 22%]
tests/test_frame_analyzer.py ...                                         [ 28%]
tests/test_interval_core.py ....                                         [ 37%]
tests/test_rich_printer.py .....                                         [ 48%]
tests/test_styling.py ......                                             [ 62%]
tests/test_tree_core.py ..............                                   [ 93%]
tests/test_visualizer.py ...                                             [100%]

=================================== FAILURES ===================================
____________________________ test_build_from_source ____________________________

    def test_build_from_source():
        source = dedent("""
        def test():
            x = 1
            return x
        """).strip()
    
        builder = AstTreeBuilder(source)
        tree = builder.build()
    
        assert tree is not None
        assert tree.root is not None
>       assert isinstance(tree.root.info, dict)
E       assert False
E        +  where False = isinstance(None, dict)
E        +    where None = Leaf(start=0, end=34, info=None).info
E        +      where Leaf(start=0, end=34, info=None) = <src.tree_interval.core.interval_core.Tree object at 0x7f6a069d6850>.root

tests/test_ast_builder.py:25: AssertionError
__________________________ test_node_value_extraction __________________________

    def test_node_value_extraction():
        source = "x.y.z(1 + 2)"
        builder = AstTreeBuilder(source)
        tree = builder.build()
    
        assert tree is not None
        nodes = tree.flatten()
>       call_node = next(n for n in nodes if n.info["type"] == "Call")

tests/test_ast_builder.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f6a0660c2b0>

>   call_node = next(n for n in nodes if n.info["type"] == "Call")
E   TypeError: 'NoneType' object is not subscriptable

tests/test_ast_builder.py:35: TypeError
____________________________ test_position_tracking ____________________________

    def test_position_tracking():
        source = dedent("""
        def func():
            return 42
        """).strip()
    
        builder = AstTreeBuilder(source)
        tree = builder.build()
    
>       func_node = next(n for n in tree.flatten() if n.info["type"] == "FunctionDef")

tests/test_ast_builder.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x7f6a06667ac0>

>   func_node = next(n for n in tree.flatten() if n.info["type"] == "FunctionDef")
E   TypeError: 'NoneType' object is not subscriptable

tests/test_ast_builder.py:47: TypeError
=========================== short test summary info ============================
FAILED tests/test_ast_builder.py::test_build_from_source - assert False
FAILED tests/test_ast_builder.py::test_node_value_extraction - TypeError: 'No...
FAILED tests/test_ast_builder.py::test_position_tracking - TypeError: 'NoneTy...
========================= 3 failed, 42 passed in 0.17s =========================
