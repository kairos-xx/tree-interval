scripts/create_zip.py:8:1: I001 [*] Import block is un-sorted or un-formatted
   |
 6 |   """
 7 |   
 8 | / import os
 9 | | from datetime import datetime
10 | | from typing import List
11 | | from zipfile import ZipFile
12 | | 
13 | | def get_exclude_dirs() -> List[str]:
   | |_^ I001
14 |       """Get list of directories to exclude from ZIP.
   |
   = help: Organize imports

scripts/get_author.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   """
 6 |   
 7 | / import subprocess
 8 | | from typing import Tuple
 9 | | 
10 | | def get_git_author() -> Tuple[str, str]:
   | |_^ I001
11 |       """Get git author name and email.
   |
   = help: Organize imports

scripts/git_commit.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   """
 6 |   
 7 | / import os
 8 | | import subprocess
 9 | | from datetime import datetime
10 | | from typing import Optional
11 | | 
12 | | def git_commit(message: Optional[str] = None) -> None:
   | |_^ I001
13 |       """Perform git commit and push operations.
   |
   = help: Organize imports

scripts/pypi_upload.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   """
 6 |   
 7 | / import os
 8 | | import subprocess
 9 | | from datetime import datetime
10 | | from typing import List
11 | | 
12 | | def run_command(command: List[str], log_file: str) -> None:
   | |_^ I001
13 |       """Run shell command and log output.
   |
   = help: Organize imports

scripts/update_workflows.py:7:1: I001 [*] Import block is un-sorted or un-formatted
   |
 5 |   """
 6 |   
 7 | / import os
 8 | | import subprocess
 9 | | from datetime import datetime
10 | | from typing import Dict, Any
11 | | import yaml
12 | | 
13 | | def load_workflow_config() -> Dict[str, Any]:
   | |_^ I001
14 |       """Load workflow configuration from YAML.
   |
   = help: Organize imports

scripts/update_workflows.py:8:8: F401 [*] `subprocess` imported but unused
   |
 7 | import os
 8 | import subprocess
   |        ^^^^^^^^^^ F401
 9 | from datetime import datetime
10 | from typing import Dict, Any
   |
   = help: Remove unused import: `subprocess`

src/tree_interval/core/chain_analyzer.py:9:1: I001 [*] Import block is un-sorted or un-formatted
   |
 7 |   """
 8 |   
 9 | / from dataclasses import dataclass
10 | | import ast
11 | | from typing import List, Optional
12 | | 
13 | | @dataclass
   | |_^ I001
14 |   class ChainInfo:
15 |       """Information about an attribute access chain.
   |
   = help: Organize imports

src/tree_interval/core/chain_analyzer.py:101:29: F841 [*] Local variable `e` is assigned to but never used
    |
 99 |                 return ChainInfo(False, chain, None)
100 |                 
101 |         except Exception as e:
    |                             ^ F841
102 |             # Return empty chain info for unparseable code
103 |             return ChainInfo(False, [], None)
    |
    = help: Remove assignment to unused variable `e`

src/tree_interval/core/chain_analyzer.py:134:9: SIM103 Return the condition directly
    |
133 |           # Create attribute if it appears before the final position in assignment
134 |           if info.is_assignment and name in info.chain[:-1]:
    |  _________^
135 | |             return True
136 | |             
137 | |         return False
    | |____________________^ SIM103
    |
    = help: Inline condition

Found 9 errors.
[*] 8 fixable with the `--fix` option (1 hidden fix can be enabled with the `--unsafe-fixes` option).
